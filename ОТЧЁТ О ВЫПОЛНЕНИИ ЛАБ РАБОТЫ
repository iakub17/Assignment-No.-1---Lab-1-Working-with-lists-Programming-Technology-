

 1. Структура программы
Программа реализует односвязный список на C++. Основные компоненты:
- **Структура Node**: содержит поля name (string), number (int), value (double) и указатель next на следующий узелФункции для работы со спискомом**:
  - addToStart/addToEnd — добавление элемента в начало/конец списка.
  - insertAfter/insertBefore — вставка элемента после/перед заданным узлом.
  - deleteNode — удаление элемента по имени.
  - printList — вывод списка на экран.
- **Функция main**: демонстрация работы всех функций.

Алгоритмы операцийераДобавление в начало/конец/конец**:
  - Создается новый узел.
  - Для начала списка: новый узел связывается с текущим головным элементом.
  - Для конца: узел добавляется после последнего элемВставка после/перед элементомментом**:
  - Для insertAfter новый узел связывается с next указанного узла.
  - Для insertBefore выполняется поиск предыдущего узла, после чего связываются указаУдалениеаление**:
  - Поиск удаляемого элемента и его предыдущего узла.
  - Перенаправление указателей и освобождение паВывод спискасписка**: последовательный обход всех узлов.

Пример работы программыграммы**
Вывод программы:
Initial list:
Name: Fifth, Number: 5, Value: 5.5
Name: Second, Number: 2, Value: 2.2
Name: Fourth, Number: 4, Value: 4.4
Name: First, Number: 1, Value: 1.1
Name: Third, Number: 3, Value: 3.3

List after deletion:
Name: Fifth, Number: 5, Value: 5.5
Name: Fourth, Number: 4, Value: 4.4
Name: First, Number: 1, Value: 1.1
Name: Third, Number: 3, Value: 3.3
Заключениеючение**
Программа корректно реализует все требуемые операции для работы с односвязным списком. 
Для улучшения можно добавить обработку ошибок (например, при попытке вставки в несуществующий узел) или использовать шаблоны для поддержки разных типов данных
